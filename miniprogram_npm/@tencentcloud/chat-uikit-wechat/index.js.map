{"version":3,"sources":["index.js","utils/constant.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["// TUIKitWChat/Chat/index.js\nvar __TEMP__ = require('aegis-mp-sdk');var Aegis = __REQUIRE_DEFAULT__(__TEMP__);\nvar __TEMP__ = require('./utils/constant');var constant = __REQUIRE_DEFAULT__(__TEMP__);\nconst app = getApp();\nComponent({\n  /**\n   * 组件的属性列表\n   */\n  properties: {\n\n  },\n\n  /**\n   * 组件的初始数据\n   */\n  data: {\n    isShowConversation: false,\n    isShowConversationList: true,\n    currentConversationID: '',\n    unreadCount: 0,\n    hasCallKit: false,\n    config: {\n      userID: '',\n      userSig: '',\n      type: 1,\n      tim: null,\n      SDKAppID: 0,\n    },\n  },\n\n  /**\n   * 组件的方法列表\n   */\n  methods: {\n    init() {\n      const { config } = this.data;\n      config.userID = wx.$chat_userID;\n      config.userSig = wx.$chat_userSig;\n      config.tim = wx.$TUIKit;\n      config.SDKAppID = wx.$chat_SDKAppID;\n      this.setData({\n        config,\n      }, () => {\n        this.TUICallKit = this.selectComponent('#TUICallKit');\n        // 这里的 isExitInit 用来判断 TUICallKit init 方法是否存在\n        // 当 isExitInit 为 true 时，进行 callkit 初始化和日志上报\n        const isExitInit = (this.TUICallKit.init !== undefined);\n        if (this.TUICallKit !== null && isExitInit) {\n          wx.aegis.reportEvent({\n            name: 'TUICallKit',\n            ext1: 'TUICallKitInit',\n            ext2: wx.$chat_reportType,\n            ext3: wx.$chat_SDKAppID,\n          });\n          this.TUICallKit.init();\n          wx.setStorageSync('_isTIMCallKit', true);\n          wx.$_isTIMCallKit = '_isTIMCallKit';\n          this.setData({\n            hasCallKit: true,\n          });\n        }\n      });\n      const TUIConversation = this.selectComponent('#TUIConversation');\n      TUIConversation.init();\n      if (!app.globalData || app.globalData.reportType !== constant.OPERATING_ENVIRONMENT) {\n        this.aegisInit();\n      }\n      wx.$chat_reportType = 'chat-uikit-wechat';\n      wx.aegis.reportEvent({\n        name: 'time',\n        ext1: 'first-run-time',\n        ext2: wx.$chat_reportType,\n        ext3: wx.$chat_SDKAppID,\n      });\n    },\n    aegisInit() {\n      wx.aegis = new Aegis({\n        id: 'iHWefAYquFxvklBblC', // 项目key\n        reportApiSpeed: true, // 接口测速\n        reportAssetSpeed: true, // 静态资源测速\n        pagePerformance: true, // 开启页面测速\n      });\n    },\n    currentConversationID(event) {\n      this.setData({\n        isShowConversation: true,\n        isShowConversationList: false,\n        currentConversationID: event.detail.currentConversationID,\n        unreadCount: event.detail.unreadCount,\n      }, () => {\n        const TUIChat = this.selectComponent('#TUIChat');\n        TUIChat.init();\n      });\n    },\n    showConversationList() {\n      this.setData({\n        isShowConversation: false,\n        isShowConversationList: true,\n      }, () => {\n        const TUIConversation = this.selectComponent('#TUIConversation');\n        TUIConversation.init();\n      });\n    },\n    handleCall(event) {\n      if (event.detail.groupID) {\n        this.TUICallKit.groupCall(event.detail);\n      } else {\n        this.TUICallKit.call(event.detail);\n      }\n    },\n    sendMessage(event) {\n      this.selectComponent('#TUIChat').sendMessage(event);\n    },\n  },\n});\n","const constant = {\n  FEAT_NATIVE_CODE: {\n    NATIVE_VERSION: 1,\n    ISTYPING_STATUS: 1,\n    NOTTYPING_STATUS: 1,\n    ISTYPING_ACTION: 14,\n    NOTTYPING_ACTION: 0,\n    FEAT_TYPING: 1\n  },\n  TYPE_INPUT_STATUS_ING: 'EIMAMSG_InputStatus_Ing',\n  TYPE_INPUT_STATUS_END: 'EIMAMSG_InputStatus_End',\n  MESSAGE_TYPE_TEXT: {\n    TIM_CUSTOM_ELEM: 'TIMCustomElem',\n  },\n  BUSINESS_ID_TEXT: {\n    USER_TYPING: 'user_typing_status',\n    EVALUATION: 'evaluation',\n    ORDER: 'order',\n    LINK: 'text_link',\n    CREATE_GROUP: 'group_create',\n    CONSULTION: 'consultion',\n  },\n\n  STRING_TEXT: {\n    TYPETYPING: '对方正在输入...',\n    TYPETEXT: '对本次服务的评价',\n  },\n  MESSAGE_ERROR_CODE: {\n    DIRTY_WORDS: 80001,\n    UPLOAD_FAIL: 6008,\n    REQUESTOR_TIME: 2081,\n    DISCONNECT_NETWORK: 2800,\n    DIRTY_MEDIA: 80004,\n    UNUPLOADED_PICTURE: 2040,\n    UNUPLOADED_MEDIA: 2350,\n    BLACKLIST_MEMBER: 20007,\n    NOT_GROUP_MEMBER: 10007\n  },\n  TOAST_TITLE_TEXT: {\n    DIRTY_WORDS: '您发送的消息包含违禁词汇!',\n    UPLOAD_FAIL: '文件上传失败!',\n    CONNECT_ERROR: '网络已断开',\n    DIRTY_MEDIA: '您发送的消息包含违禁内容!',\n    RESEND_SUCCESS: '重发成功',\n    UNUPLOADED_PICTURE: '上传图片失败，请检查您是否未注册上传插件',\n    UNUPLOADED_MEDIA: '上传视频失败，请检查您是否未注册上传插件',\n    BLACKLIST_MEMBER: '您已被拉黑，无法对此人发送信息！',\n    NOT_GROUP_MEMBER: '您已不在此群组中！'\n  },\n\n  OPERATING_ENVIRONMENT: 'imWxTuikit'\n};\n\n\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = constant;\n"]}